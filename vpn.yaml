- name: Install IKEv2 VPN server for macOS / iOS
  # Specify hosts here
  hosts: webservers 
  become_user: root
  become: yes
  tasks:
    - name: Install packages
      apt: 
        name: "{{ item.package_name }}"
        state: present
        update_cache: yes
      loop:
        - { package_name: strongswan-pki }
        - { package_name: libtss2-tcti-tabrmd0 }
        - { package_name: libcharon-extra-plugins }
        - { package_name: libcharon-extauth-plugins }
        - { package_name: libstrongswan-extra-plugins }
    - name: Creates directory
      file:
        path: ~/pki/{cacerts,certs,private}
        state: directory
        mode: '700'
  
    - name: Generating a Certificate for the VPN Server
      shell: |
        pki --gen --type rsa --size 4096 --outform pem > ~/pki/private/ca-key.pem
        pki --self --ca --lifetime 3650 --in ~/pki/private/ca-key.pem \
          --type rsa --dn "CN=VPN root CA" --outform pem > ~/pki/cacerts/ca-cert.pem
        pki --gen --type rsa --size 4096 --outform pem > ~/pki/private/server-key.pem
        pki --pub --in ~/pki/private/server-key.pem --type rsa \
        | pki --issue --lifetime 1825 \
        --cacert ~/pki/cacerts/ca-cert.pem \
        --cakey ~/pki/private/ca-key.pem \
        --dn "CN=52.36.43.24" --san 52.36.43.24 \
        --flag serverAuth --flag ikeIntermediate --outform pem \
        >  ~/pki/certs/server-cert.pem
        sudo cp -r ~/pki/* /etc/ipsec.d/
    - name: Configuring StrongSwan
      blockinfile:
        dest: /etc/ipsec.conf
        block: |
          config setup
              charondebug="ike 1, knl 1, cfg 0"
              uniqueids=no
          conn ikev2-vpn
              auto=add
              compress=no
              type=tunnel
              keyexchange=ikev2
              fragmentation=yes
              forceencaps=yes
              dpdaction=clear
              dpddelay=300s
              rekey=no
              left=%any
              leftid=35.89.51.130
              leftcert=server-cert.pem
              leftsendcert=always
              leftsubnet=0.0.0.0/0
              right=%any
              rightid=%any
              rightauth=eap-mschapv2
              rightsourceip=10.10.10.0/24
              rightdns=8.8.8.8,8.8.4.4
              rightsendcert=never
              eap_identity=%identity
              ike=chacha20poly1305-sha512-curve25519-prfsha512,aes256gcm16-sha384-prfsha384-ecp384,aes256-sha1-modp1024,aes128-sha1-modp1024,3des-sha1-modp1024!
              esp=chacha20poly1305-sha512,aes256gcm16-ecp384,aes256-sha256,aes256-sha1,3des-sha1!
        insertbefore: BOF
    - name: Configuring VPN Authentication
      blockinfile:
        dest: /etc/ipsec.secrets
        block: |
          : RSA "server-key.pem"
          ali069 : EAP "069lions"
        insertbefore: BOF
    - name: restart strongswan-starter
      shell: systemctl restart strongswan-starter
    - name: Allow everything and enable UFW
      ufw:
        state: enabled
        policy: allow
    - ufw:
        rule: allow
        name: OpenSSH
    - name: Allow all access to tcp port 4500
      ufw:
        rule: allow
        port: '4500'
        proto: udp
    - name: Allow all access to tcp -port 500
      ufw:
        rule: allow
        port: '500'
        proto: udp
    - name: Configuring before rules
      blockinfile:
        dest: /etc/ufw/before.rules
        block: |
          *nat
          -A POSTROUTING -s 10.10.10.0/24 -o eth0 -m policy --pol ipsec --dir out -j ACCEPT
          -A POSTROUTING -s 10.10.10.0/24 -o eth0 -j MASQUERADE
          COMMIT
          
          *mangle
          -A FORWARD --match policy --pol ipsec --dir in -s 10.10.10.0/24 -o eth0 -p tcp -m tcp --tcp-flags SYN,RST SYN -m tcpmss --mss 1361:1536 -j TCPMSS --set-mss 1360
          COMMIT
        insertbefore: "BOF"
    - name: Insert/Update HTML surrounded by custom markers after <body> line
      ansible.builtin.blockinfile:
        path: /etc/ufw/before.rules
        marker: "#<!-- {mark} ANSIBLE MANAGED BLOCK -->"
        insertafter: ":ufw-not-local"
        block: |
          -A ufw-before-forward --match policy --pol ipsec --dir in --proto esp -s 10.10.10.0/24 -j ACCEPT
          -A ufw-before-forward --match policy --pol ipsec --dir out --proto esp -d 10.10.10.0/24 -j ACCEPT
    - name: Configuring ip_forward
      blockinfile:
        dest: /etc/ufw/sysctl.conf
        block: |
          net/ipv4/ip_forward=1
          net/ipv4/conf/all/accept_redirects=0
          net/ipv4/conf/all/send_redirects=0
          net/ipv4/ip_no_pmtu_disc=1
        insertafter: "EOF"
    - name: Allow everything and disable UFW
      ufw:
        state: disable
        policy: allow
          
